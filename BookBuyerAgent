package agents;

import jade.core.Agent;
import behaviours.RequestPerformer;
import jade.core.AID;
import jade.core.behaviours.*;
import jade.domain.DFService;
import jade.domain.FIPAException;
import jade.domain.FIPAAgentManagement.DFAgentDescription;
import jade.domain.FIPAAgentManagement.ServiceDescription;

import gui.BookComprador;

public class BookBuyerAgent extends Agent {
  private BookComprador gui;
  private String bookTitle;
  private AID[] sellerAgents;
  private int ticker_timer = 10000;
  private BookBuyerAgent this_agent = this;
  
  protected void setup() {
    System.out.println("Agente comprador: " + getAID().getName() + " esta listo");
    gui = new BookComprador(this);
    gui.showGui();
  }

  public void buscar(String tittle){
    addBehaviour(new OneShotBehaviour(){
        public void action(){        
            Object[] args = getArguments();
            if(tittle.length() > 0) {
              bookTitle = tittle;
              System.out.println("Libro: " + bookTitle);
              System.out.println("Tratando de comprar: " + bookTitle);

                  DFAgentDescription template = new DFAgentDescription();
                  ServiceDescription sd = new ServiceDescription();
                  sd.setType("book-selling");
                  template.addServices(sd);

                  try {
                    DFAgentDescription[] result = DFService.search(myAgent, template);
                    System.out.println("Encontré los siguientes vendedores:");
                    sellerAgents = new AID[result.length];
                    for(int i = 0; i < result.length; i++) {
                      sellerAgents[i] = result[i].getName();
                      System.out.println(sellerAgents[i].getName());
                    }

                  }catch(FIPAException fe) {
                    fe.printStackTrace();
                  }

                  myAgent.addBehaviour(new RequestPerformer(this_agent));
            } else {
              System.out.println("No se ha especificado ningún título de libro");
              doDelete();
            }
            }
        });
    }  
  
  protected void takeDown() {
    System.out.println("Agente comprador: " + getAID().getName() + " terminado");
  }
  
  public AID[] getSellerAgents() {
    return sellerAgents;
  }
  
  public String getBookTitle() {
    return bookTitle;
  }
}
